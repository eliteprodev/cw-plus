{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "anyOf": [
    {
      "description": "Returns the threshold rules that would be used for a new proposal that was opened right now. The threshold rules do not change often, but the `total_weight` in the response may easily differ from that used in previously opened proposals. Returns ThresholdResponse.",
      "type": "object",
      "required": [
        "threshold"
      ],
      "properties": {
        "threshold": {
          "type": "object"
        }
      }
    },
    {
      "description": "Returns details of the proposal state. Returns ProposalResponse.",
      "type": "object",
      "required": [
        "proposal"
      ],
      "properties": {
        "proposal": {
          "type": "object",
          "required": [
            "proposal_id"
          ],
          "properties": {
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "description": "Iterate over details of all proposals from oldest to newest. Returns ProposalListResponse",
      "type": "object",
      "required": [
        "list_proposals"
      ],
      "properties": {
        "list_proposals": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "description": "Iterate reverse over details of all proposals, this is useful to easily query only the most recent proposals (to get updates). Returns ProposalListResponse",
      "type": "object",
      "required": [
        "reverse_proposals"
      ],
      "properties": {
        "reverse_proposals": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_before": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint64",
              "minimum": 0.0
            }
          }
        }
      }
    },
    {
      "description": "Query the vote made by the given voter on `proposal_id`. This should return an error if there is no such proposal. It will return a None value if the proposal exists but the voter did not vote. Returns VoteResponse",
      "type": "object",
      "required": [
        "vote"
      ],
      "properties": {
        "vote": {
          "type": "object",
          "required": [
            "proposal_id",
            "voter"
          ],
          "properties": {
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "voter": {
              "$ref": "#/definitions/HumanAddr"
            }
          }
        }
      }
    },
    {
      "description": "Iterate (with pagination) over all votes for this proposal. The ordering is arbitrary, unlikely to be sorted by HumanAddr. But ordering is consistent and pagination from the end of each page will cover all votes for the proposal. Returns VoteListResponse",
      "type": "object",
      "required": [
        "list_votes"
      ],
      "properties": {
        "list_votes": {
          "type": "object",
          "required": [
            "proposal_id"
          ],
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "proposal_id": {
              "type": "integer",
              "format": "uint64",
              "minimum": 0.0
            },
            "start_after": {
              "anyOf": [
                {
                  "$ref": "#/definitions/HumanAddr"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      }
    },
    {
      "description": "Voter extension: Returns VoterResponse",
      "type": "object",
      "required": [
        "voter"
      ],
      "properties": {
        "voter": {
          "type": "object",
          "required": [
            "address"
          ],
          "properties": {
            "address": {
              "$ref": "#/definitions/HumanAddr"
            }
          }
        }
      }
    },
    {
      "description": "ListVoters extension: Returns VoterListResponse",
      "type": "object",
      "required": [
        "list_voters"
      ],
      "properties": {
        "list_voters": {
          "type": "object",
          "properties": {
            "limit": {
              "type": [
                "integer",
                "null"
              ],
              "format": "uint32",
              "minimum": 0.0
            },
            "start_after": {
              "anyOf": [
                {
                  "$ref": "#/definitions/HumanAddr"
                },
                {
                  "type": "null"
                }
              ]
            }
          }
        }
      }
    }
  ],
  "definitions": {
    "HumanAddr": {
      "type": "string"
    }
  }
}
